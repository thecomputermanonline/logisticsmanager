<?php

/**
 * This is the model base class for the table "consignments".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Consignments".
 *
 * Columns in table "consignments" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $id
 * @property string $way_bill_number
 * @property string $sender_id
 * @property string $receiver_id
 * @property string $type
 * @property string $origin_code
 * @property string $destination_code
 * @property string $packaging
 * @property integer $weight
 * @property string $content_description
 * @property string $delivery_option
 * @property string $pod
 * @property string $pickup_date
 * @property string $status
 * @property string $remark
 * @property string $recived_date
 * @property string $user_id
 * @property string $last_update
 *
 */
abstract class BaseConsignments extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'consignments';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Consignments|Consignments', $n);
	}

	public static function representingColumn() {
		return 'way_bill_number';
	}

	public function rules() {
		return array(
			array('way_bill_number, sender_id, receiver_id, type, origin_code, destination_code, packaging, weight, content_description, delivery_option, pod, pickup_date, status, remark, recived_date, user_id, last_update', 'required'),
			array('weight', 'numerical', 'integerOnly'=>true),
			array('way_bill_number', 'length', 'max'=>10),
			array('sender_id, receiver_id, user_id', 'length', 'max'=>11),
			array('type, origin_code, destination_code', 'length', 'max'=>20),
			array('packaging, pod, status', 'length', 'max'=>15),
			array('delivery_option', 'length', 'max'=>30),
			array('id, way_bill_number, sender_id, receiver_id, type, origin_code, destination_code, packaging, weight, content_description, delivery_option, pod, pickup_date, status, remark, recived_date, user_id, last_update', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'way_bill_number' => Yii::t('app', 'Way Bill Number'),
			'sender_id' => Yii::t('app', 'Sender'),
			'receiver_id' => Yii::t('app', 'Receiver'),
			'type' => Yii::t('app', 'Type'),
			'origin_code' => Yii::t('app', 'Origin Code'),
			'destination_code' => Yii::t('app', 'Destination Code'),
			'packaging' => Yii::t('app', 'Packaging'),
			'weight' => Yii::t('app', 'Weight'),
			'content_description' => Yii::t('app', 'Content Description'),
			'delivery_option' => Yii::t('app', 'Delivery Option'),
			'pod' => Yii::t('app', 'Pod'),
			'pickup_date' => Yii::t('app', 'Pickup Date'),
			'status' => Yii::t('app', 'Status'),
			'remark' => Yii::t('app', 'Remark'),
			'recived_date' => Yii::t('app', 'Recived Date'),
			'user_id' => Yii::t('app', 'User'),
			'last_update' => Yii::t('app', 'Last Update'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('way_bill_number', $this->way_bill_number, true);
		$criteria->compare('sender_id', $this->sender_id, true);
		$criteria->compare('receiver_id', $this->receiver_id, true);
		$criteria->compare('type', $this->type, true);
		$criteria->compare('origin_code', $this->origin_code, true);
		$criteria->compare('destination_code', $this->destination_code, true);
		$criteria->compare('packaging', $this->packaging, true);
		$criteria->compare('weight', $this->weight);
		$criteria->compare('content_description', $this->content_description, true);
		$criteria->compare('delivery_option', $this->delivery_option, true);
		$criteria->compare('pod', $this->pod, true);
		$criteria->compare('pickup_date', $this->pickup_date, true);
		$criteria->compare('status', $this->status, true);
		$criteria->compare('remark', $this->remark, true);
		$criteria->compare('recived_date', $this->recived_date, true);
		$criteria->compare('user_id', $this->user_id, true);
		$criteria->compare('last_update', $this->last_update, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
		public function search2() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('way_bill_number', $this->way_bill_number, true);
		$criteria->compare('sender_id', yii::app()->user->id, true);
		$criteria->compare('receiver_id', $this->receiver_id, true);
		$criteria->compare('type', $this->type, true);
		$criteria->compare('origin_code', $this->origin_code, true);
		$criteria->compare('destination_code', $this->destination_code, true);
		$criteria->compare('packaging', $this->packaging, true);
		$criteria->compare('weight', $this->weight);
		$criteria->compare('content_description', $this->content_description, true);
		$criteria->compare('delivery_option', $this->delivery_option, true);
		$criteria->compare('pod', $this->pod, true);
		$criteria->compare('pickup_date', $this->pickup_date, true);
		$criteria->compare('status', $this->status, true);
		$criteria->compare('remark', $this->remark, true);
		$criteria->compare('recived_date', $this->recived_date, true);
		$criteria->compare('user_id', $this->user_id, true);
		$criteria->compare('last_update', $this->last_update, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}